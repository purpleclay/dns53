{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"],"fields":{"title":{"boost":1000.0},"text":{"boost":1.0},"tags":{"boost":1000000.0}}},"docs":[{"location":"","title":"DNS 53","text":"<p>Dynamic DNS within Amazon Route 53. Expose your EC2 quickly, easily, and privately within a Route 53 Private Hosted Zone (PHZ).</p> <p>Easily collaborate with a colleague by exposing your EC2 within a team VPC. You could even hook up a locally running application to a local k3d cluster using an ExternalName service during development. Once your EC2 is exposed, control how it is accessed through your EC2 security groups.</p>"},{"location":"license/","title":"License","text":"<p>MIT License</p> <p>Copyright (c) 2022 - 2023 Purple Clay</p> <p>Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:</p> <p>The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.</p> <p>THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.</p>"},{"location":"configure/auto-attachment/","title":"Auto Attachment of your EC2","text":"<p>Your EC2 can automatically be attached to a default Route53 Private Hosted Zone (PHZ) called <code>dns53</code>.</p> <pre><code>dns53 --auto-attach\n</code></pre> <p>For this to work as intended, <code>dns53</code> handles two attachment scenarios, removing the need for any PHZ management. \ud83d\udc4d</p>"},{"location":"configure/auto-attachment/#you-are-the-first-auto-attachment","title":"You are the first Auto Attachment","text":"<p>Congratulations, you beat everyone else in your team or organisation and auto-attached your EC2 to the default <code>dns53</code> PHZ. <code>dns53</code> will:</p> <ol> <li>Create the new <code>dns53</code> PHZ and associate the launched EC2 VPC with it.</li> <li>Broadcasts your EC2 as expected, using a custom domain name if provided.</li> <li>Tidies everything up when you exit.</li> </ol>"},{"location":"configure/auto-attachment/#auto-attachment-has-already-happened","title":"Auto Attachment has already happened","text":"<p>If someone in your team, or organisation, was super keen and already auto-attached their EC2 to the default <code>dns53</code> PHZ, your attachment will be slightly different. <code>dns53</code> will:</p> <ol> <li>Check if your launched EC2 is within a VPC associated with the PHZ. If not, it will create a new association.</li> <li>Broadcasts your EC2 as expected, using a custom domain name if provided.</li> <li>Tidies everything up when you exit.</li> </ol>"},{"location":"configure/auto-attachment/#a-10000-foot-view","title":"A 10,000-foot view","text":""},{"location":"configure/broadcast-ec2/","title":"Privately Broadcast your EC2","text":"<p>To broadcast your EC2 privately within your VPC couldn't be easier. Launch the wizard and follow the on-screen prompts:</p> <pre><code>dns53\n</code></pre>"},{"location":"configure/broadcast-ec2/#default-domain-name","title":"Default Domain Name","text":"<p>A default domain name will be assigned to your EC2 when <code>dns53</code> adds an A-Record to the chosen Route53 Private Hosted Zone (PHZ).</p> <p>It follows the format:</p> <p><code>&lt;EC2_PRIVATE_IPv4&gt;.dns53.&lt;PHZ_ROOT_DOMAIN&gt;</code> ~&gt; <code>10-0-1-182.dns53.testing</code></p>"},{"location":"configure/broadcast-ec2/#skipping-the-wizard","title":"Skipping the Wizard","text":"<p>If you have the ID of your Route53 PHZ handy, you can skip the wizard and immediately broadcast your EC2:</p> <pre><code>dns53 --phz-id Z05504861FO8RFR02KU72\n</code></pre>"},{"location":"configure/custom-domain/","title":"Using a Custom Domain Name","text":"<p>If you want complete control of the domain name associated with your EC2, you can customise it in one of two ways.</p> <p>Route53 Root Domain is Optional</p> <p><code>dns53</code> will automatically append the Route53 root domain when creating the A-Record. Feel free to omit this when providing a custom domain</p>"},{"location":"configure/custom-domain/#static-domain","title":"Static Domain","text":"<pre><code>dns53 --domain-name \"my.ec2\"\n</code></pre>"},{"location":"configure/custom-domain/#templated-domain","title":"Templated Domain","text":"<p>A templated domain leverages the text templating capabilities of the Go language to replace named fields with concrete values. A list of supported named fields can be found here.</p> <pre><code>dns53 --domain-name \"{{.IPv4}}.{{.Region}}\"\n</code></pre>"},{"location":"configure/custom-domain/#domain-validation","title":"Domain Validation","text":"<p>A custom domain must be valid before assigning it to your EC2 instance. A series of checks must pass.</p> <p>A domain must:</p> <ul> <li>not contain leading or trailing hyphens (<code>-</code>) and dots (<code>.</code>)</li> <li>not contain consecutive hyphens (<code>--</code>) or dots (<code>..</code>)</li> <li>not contain whitespace (<code></code>)</li> <li>only contain valid characters from the sequence <code>[A-Za-z0-9-.]</code></li> </ul> <p><code>dns53</code> will automatically clean any domain name in an attempt to enforce these validation checks.</p>"},{"location":"configure/exposing-tags/","title":"Exposing EC2 Instance Tags","text":"<p>By default, EC2 tags are not accessible through the Instance Metadata Service (IMDS) and subsequently by <code>dns53</code>. Granting access to EC2 instance tags can be carried out manually<sup>1</sup> or with the following custom command:</p> <pre><code>dns53 imds --instance-metadata-tags on\n</code></pre>"},{"location":"configure/exposing-tags/#cleaning-tag-names","title":"Cleaning Tag Names","text":"<p>All tags accessible through IMDS will subsequently be \"cleaned\" and made available for crafting custom domain names. A Pascal Case naming convention is applied to all tags when stored within an internal map alongside their originally named counterpart, and both are accessible through templating.</p> <ol> <li> <p>Access to EC2 instance tags can be granted directly through the AWS Console or by using the CLI as documented here \u21a9</p> </li> </ol>"},{"location":"configure/iam/","title":"IAM Permissions","text":"<p>Access to Route53 and EC2 is required for <code>dns53</code> to work. Your IAM persona must have the following permissions granted:</p> <pre><code>{\n  \"Version\": \"2012-10-17\",\n  \"Statement\": [\n    {\n      \"Effect\": \"Allow\",\n      \"Action\": [\n        \"route53:AssociateVPCWithHostedZone\",\n        \"route53:ChangeResourceRecordSets\",\n        \"route53:DeleteHostedZone\",\n        \"route53:DisassociateVPCFromHostedZone\",\n        \"route53:GetHostedZone\"\n      ],\n      \"Resource\": \"arn:aws:route53:::hostedzone/*\"\n    },\n    {\n      \"Effect\": \"Allow\",\n      \"Action\": [\n        \"ec2:DescribeVpcs\",\n        \"route53:CreateHostedZone\",\n        \"route53:ListHostedZonesByName\",\n        \"route53:ListHostedZonesByVPC\"\n      ],\n      \"Resource\": \"*\"\n    },\n    {\n      \"Effect\": \"Allow\",\n      \"Action\": [\"ec2:ModifyInstanceMetadataOptions\"],\n      \"Resource\": \"arn:aws:ec2:&lt;REGION&gt;:&lt;ACCOUNT&gt;:instance/*\" // (1)!\n    }\n  ]\n}\n</code></pre> <ol> <li>Don't forget to replace the <code>&lt;REGION&gt;</code> and <code>&lt;ACCOUNT&gt;</code> placeholders with your specific AWS details, e.g. <code>arn:aws:ec2:eu-west-2:112233445566:instance/*</code>. You could also lock it down to a specific EC2 instance if you wanted </li> </ol> <p>Aim for Least Privilege </p> <p>It would be best if you fine-tuned this policy further to restrict access and adopt the mantra of \"least privilege\". You accept this policy at your own risk</p>"},{"location":"configure/list-tags/","title":"List Available EC2 Instance Tags","text":"<p>To generate a cheat sheet for including EC2 instance tags within a custom domain using Go templating, run the following command:</p> <pre><code>dns tags\n</code></pre>"},{"location":"configure/tracing-requests/","title":"Tracing Requests with a Reverse Proxy","text":"<p>To trace requests sent to your broadcasted EC2, <code>dns53</code> comes bundled with an internal reverse proxy. To enable proxying:</p> <pre><code>dns53 --proxy\n</code></pre> <p>Once enabled, set the required environment variables to trace both <code>HTTP</code> and <code>HTTPS</code> requests. It is advised not to proxy any requests to IMDS on your EC2.</p> <pre><code>export HTTP_PROXY=http://localhost:10080\nexport HTTPS_PROXY=http://localhost:10080\nexport NO_PROXY=169.254.169.254\n</code></pre> <pre><code>curl http://httpbin.org/headers\n</code></pre> <pre><code>curl https://httpbin.org/ip -k\n</code></pre> <p>If you do not wish to set any of these environment variables, your preferred CLI tool should support request proxying using a dedicated flag. For <code>curl</code>, that is <code>-x</code>.</p>"},{"location":"configure/tracing-requests/#changing-the-proxy-port","title":"Changing the proxy port","text":"<p>Feel free to change the default proxy port of <code>:10080</code> by using the <code>proxy-port</code> flag:</p> <pre><code>dns53 --proxy --proxy-port 10888\n</code></pre>"},{"location":"install/binary/","title":"Installing the Binary","text":"<p>You can use various package managers to install the <code>dns53</code> binary. Take your pick.</p>"},{"location":"install/binary/#package-managers","title":"Package Managers","text":""},{"location":"install/binary/#homebrew","title":"Homebrew","text":"<p>To use Homebrew:</p> <pre><code>brew install purpleclay/tap/dns53\n</code></pre>"},{"location":"install/binary/#scoop","title":"Scoop","text":"<p>To use Scoop:</p> <pre><code>scoop bucket add purpleclay https://github.com/purpleclay/scoop-bucket.git\nscoop install dns53\n</code></pre>"},{"location":"install/binary/#apt","title":"Apt","text":"<p>To install using the apt package manager:</p> <pre><code>echo 'deb [trusted=yes] https://fury.purpleclay.dev/apt/ /' | sudo tee /etc/apt/sources.list.d/purpleclay.list\nsudo apt update\nsudo apt install -y dns53\n</code></pre> <p>You may need to install the <code>ca-certificates</code> package if you encounter trust issues with regard to the Gemfury certificate:</p> <pre><code>sudo apt update &amp;&amp; sudo apt install -y ca-certificates\n</code></pre>"},{"location":"install/binary/#yum","title":"Yum","text":"<p>To install using the yum package manager:</p> <pre><code>echo '[purpleclay]\nname=purpleclay\nbaseurl=https://fury.purpleclay.dev/yum/\nenabled=1\ngpgcheck=0' | sudo tee /etc/yum.repos.d/purpleclay.repo\nsudo yum install -y dns53\n</code></pre>"},{"location":"install/binary/#aur","title":"Aur","text":"<p>To install from the aur using yay:</p> <pre><code>yay -S dns53-bin\n</code></pre>"},{"location":"install/binary/#linux-packages","title":"Linux Packages","text":"<p>Download and manually install one of the <code>.deb</code>, <code>.rpm</code> or <code>.apk</code> packages from the Releases page.</p> AptYumApk <pre><code>sudo apt install dns53_*.deb\n</code></pre> <pre><code>sudo yum localinstall dns53_*.rpm\n</code></pre> <pre><code>sudo apk add --no-cache --allow-untrusted dns53_*.apk\n</code></pre>"},{"location":"install/binary/#go-install","title":"Go Install","text":"<pre><code>go install github.com/purpleclay/dns53@latest\n</code></pre>"},{"location":"install/binary/#bash-script","title":"Bash Script","text":"<p>To install the latest version using a bash script:</p> <pre><code>curl https://raw.githubusercontent.com/purpleclay/dns53/main/scripts/install | bash\n</code></pre> <p>Download a specific version using the <code>-v</code> flag. The script uses <code>sudo</code> by default but can be disabled through the <code>--no-sudo</code> flag.</p> <pre><code>curl https://raw.githubusercontent.com/purpleclay/dns53/main/scripts/install | bash -s -- -v v0.1.0 --no-sudo\n</code></pre>"},{"location":"install/binary/#manual-download-of-binary","title":"Manual Download of Binary","text":"<p>Head over to the Releases page on GitHub and download any release artefact. Unpack the <code>dns53</code> binary and add it to your <code>PATH</code>.</p>"},{"location":"install/binary/#verifying-a-binary-with-cosign","title":"Verifying a Binary with Cosign","text":"<p>All binaries can be verified using cosign.</p> <ol> <li>Download the checksum files that need to be verified:</li> </ol> <pre><code>curl -sL https://github.com/purpleclay/dns53/releases/download/v0.8.0/checksums.txt -O\ncurl -sL https://github.com/purpleclay/dns53/releases/download/v0.8.0/checksums.txt.sig -O\ncurl -sL https://github.com/purpleclay/dns53/releases/download/v0.8.0/checksums.txt.pem -O\n</code></pre> <ol> <li>Verify the signature of the checksum file:</li> </ol> <pre><code>cosign verify-blob --cert checksums.txt.pem --signature checksums.txt.sig checksums.txt\n</code></pre> <ol> <li>Download any release artefact and verify its SHA256 signature matches the entry within the checksum file:</li> </ol> <pre><code>sha256sum --ignore-missing -c checksums.txt\n</code></pre>"},{"location":"install/source/","title":"Compiling from Source","text":"<p>Download both Go 1.21+ and go-task. Then clone the code from GitHub:</p> <pre><code>git clone https://github.com/purpleclay/dns53.git\ncd dns53\n</code></pre> <p>Build:</p> <pre><code>task\n</code></pre> <p>And check that everything works:</p> <pre><code>./dns53 version\n</code></pre>"},{"location":"reference/templating/","title":"Go Templates","text":"<p>Full support for Go templates through a series of predefined named fields allows `dns53`` to support a dynamic configuration where needed.</p> <p>Table Key</p> <p>This is a living table and will change as new features are released.</p> <ul> <li>: the metadata was formatted to ensure it is URL compliant</li> <li>: the metadata was retrieved from EC2 instance tags; this feature must be enabled</li> </ul>"},{"location":"reference/templating/#named-fields","title":"Named Fields","text":"<p>The following named fields directly access metadata about your EC2 from the Instance Metadata Service (IMDS).</p> Named Field Description Example <code>{{.IPv4}}</code> the private IPv4 address of the EC2 instance <code>10-0-1-182</code> <code>{{.Region}}</code> the region of the EC2 instance <code>eu-west-2</code> <code>{{.VPC}}</code> the VPC ID of where the EC2 instance was launched <code>vpc-016d173db537793d1</code> <code>{{.AZ}}</code> the availability zone (AZ) of the EC2 instance <code>eu-west-2a</code> <code>{{.InstanceID}}</code> the unique ID of the EC2 instance <code>i-03e092f544905abb2</code> <code>{{.Name}}</code> a name assigned to the EC2 instance <code>dev-ec2</code>"},{"location":"reference/templating/#dynamic-tags","title":"Dynamic Tags","text":"<p>As the IMDS service exposes all EC2 instance tags (once enabled), you can access them in much the same way as other named fields. Internally <code>dns53</code> stores all tags within a <code>Tags</code> map and provides access to them in two ways.</p> <ol> <li>Directly through property chaining<sup>1</sup>, <code>{{.Tags.Key}}</code></li> <li>Or by using the inbuilt Go templating <code>index</code> function, <code>{{index .Tags \"Key\"}}</code></li> </ol> Named Field Description Examples <code>{{.Tags.Ec2Role}}</code> the role assigned to this EC2 instance <code>development</code> <code>{{index .Tags \"ec2:role\"}}</code> the role assigned to this EC2 instance <code>development</code> <ol> <li> <p>Amazon's tag naming and usage guidelines permit characters not supported by Go templating for property chaining, namely <code>[+ - = . , _ : @]</code>. A best efforts approach was adopted to clean the name of the tag; for further details, please read the following documentation.\u00a0\u21a9</p> </li> </ol>"},{"location":"reference/cli/dns53-imds/","title":"Command Line","text":"<p>Toggle EC2 IMDS features</p>"},{"location":"reference/cli/dns53-imds/#usage","title":"Usage","text":"<pre><code>dns53 imds [flags]\n</code></pre>"},{"location":"reference/cli/dns53-imds/#flags","title":"Flags","text":"<pre><code>-h, --help                            help for imds\n    --instance-metadata-tags string   toggle the inclusion of EC2 instance tags\n                                      within IMDS (on|off)\n</code></pre>"},{"location":"reference/cli/dns53-imds/#global-flags","title":"Global Flags","text":"<pre><code>--profile string   the AWS named profile to use when loading credentials\n--region string    the AWS region to use when querying AWS\n</code></pre>"},{"location":"reference/cli/dns53-tags/","title":"Command Line","text":"<p>Lists all available EC2 instance tags and how to use them with Go templating</p>"},{"location":"reference/cli/dns53-tags/#usage","title":"Usage","text":"<pre><code>dns53 tags [flags]\n</code></pre>"},{"location":"reference/cli/dns53-tags/#flags","title":"Flags","text":"<pre><code>-h, --help   help for tags\n</code></pre>"},{"location":"reference/cli/dns53-tags/#global-flags","title":"Global Flags","text":"<pre><code>--profile string   the AWS named profile to use when loading credentials\n--region string    the AWS region to use when querying AWS\n</code></pre>"},{"location":"reference/cli/dns53/","title":"Command Line","text":"<p>Dynamic DNS within Amazon Route 53. Expose your EC2 quickly, easily, and privately within a Route 53 Private Hosted Zone (PHZ).</p> <p>Your EC2 will be exposed through a dynamically generated resource record that will automatically be deleted when dns53 exits. Let dns53 name your resource record for you, or customise it to your needs.</p>"},{"location":"reference/cli/dns53/#usage","title":"Usage","text":"<pre><code>dns53 [flags]\ndns53 [command]\n</code></pre>"},{"location":"reference/cli/dns53/#flags","title":"Flags","text":"<pre><code>    --auto-attach          automatically create and attach a record set to a\n                           default private hosted zone\n    --domain-name string   assign a custom domain name when generating a record\n                           set\n-h, --help                 help for dns53\n    --phz-id string        an ID of a Route53 private hosted zone to use when\n                           generating a record set\n    --profile string       the AWS named profile to use when loading credentials\n    --proxy                enable a reverse proxy for tracing requests to this\n                           ec2\n    --proxy-port int       the port assigned to the proxy when enabled\n                           (default 10080)\n    --region string        the AWS region to use when querying AWS\n</code></pre>"},{"location":"reference/cli/dns53/#commands","title":"Commands","text":"<pre><code>completion  Generate the autocompletion script for the specified shell\nhelp        Help about any command\nimds        Toggle EC2 IMDS features\ntags        Lists all available EC2 instance tags and how to use them with Go\n            templating\nversion     Print build time version information\n</code></pre>"}]}