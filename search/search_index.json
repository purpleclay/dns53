{"config":{"indexing":"full","jieba_dict":null,"jieba_dict_user":null,"lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"<p>Dynamic DNS within Amazon Route 53. Expose your EC2 quickly, easily, and privately within a Route 53 Private Hosted Zone (PHZ).</p> <p>Easily collaborate with a colleague by exposing your EC2 within a team VPC. You could even hook up a locally running application to a local k3d cluster using an ExternalName service during development. Once your EC2 is exposed, control how it is accessed through your EC2 security groups.</p> <p>Written in Go, <code>dns53</code> is incredibly small and easy to install.</p>","title":"dns53"},{"location":"license/","text":"<p>MIT License</p> <p>Copyright (c) 2022 Purple Clay</p> <p>Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:</p> <p>The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.</p> <p>THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.</p>","title":"License"},{"location":"configure/broadcast-ec2/","text":"<p>To broadcast your EC2 privately within your VPC couldn't be easier. Launch the wizard and follow the on-screen prompts:</p> <pre><code>dns53\n</code></pre>","title":"Privately Broadcast your EC2"},{"location":"configure/broadcast-ec2/#default-domain-name","text":"<p>A default domain name will be assigned to your EC2 when <code>dns53</code> adds an A-Record to the chosen Route53 Private Hosted Zone (PHZ).</p> <p>It follows the format:</p> <p><code>&lt;EC2_PRIVATE_IPv4&gt;.dns53.&lt;PHZ_ROOT_DOMAIN&gt;</code> ~&gt; <code>10-0-1-182.dns53.testing</code></p>","title":"Default Domain Name"},{"location":"configure/broadcast-ec2/#skipping-the-wizard","text":"<p>If you have the ID of your Route53 PHZ handy, you can skip the wizard and immediately broadcast your EC2:</p> <pre><code>dns53 --phz-id Z000000000ABCDEFGHIJK\n</code></pre>","title":"Skipping the Wizard"},{"location":"configure/custom-domain/","text":"<p>If you want complete control of the domain name associated with your EC2, you can customise it in one of two ways.</p>  <p>Route53 Root Domain is Optional</p> <p><code>dns53</code> will automatically append the Route53 root domain when creating the A-Record. Feel free to omit this when providing a custom domain</p>","title":"Using a Custom Domain Name"},{"location":"configure/custom-domain/#static-domain","text":"<pre><code>dns53 --domain-name \"my.ec2\"\n</code></pre>","title":"Static Domain"},{"location":"configure/custom-domain/#templated-domain","text":"<p>A templated domain leverages the text templating capabilities of the Go language to replace named fields with concrete values. A list of supported named fields can be found here.</p> <pre><code>dns53 --domain-name \"{{.IPv4}}.{{.Region}}\"\n</code></pre>","title":"Templated Domain"},{"location":"configure/custom-domain/#domain-validation","text":"<p>A custom domain must be valid before assigning it to your EC2 instance. A series of checks must pass.</p> <p>A domain must:</p> <ul> <li>not contain leading or trailing hyphens (<code>-</code>) and dots (<code>.</code>)</li> <li>not contain consecutive hyphens (<code>--</code>) or dots (<code>..</code>)</li> <li>not contain whitespace (<code></code>)</li> <li>only contain valid characters from the sequence <code>[A-Za-z0-9-.]</code></li> </ul> <p><code>dns53</code> will automatically clean any domain name in an attempt to enforce these validation checks.</p>","title":"Domain Validation"},{"location":"configure/exposing-tags/","text":"<p>By default, EC2 tags are not accessible through the Instance Metadata Service (IMDS) and subsequently by <code>dns53</code>. Granting access to EC2 instance tags can be carried out manually1 or with the following custom command:</p> <pre><code>dns53 imds --instance-metadata-tags on\n</code></pre>","title":"Exposing EC2 Instance Tags"},{"location":"configure/exposing-tags/#cleaning-tag-names","text":"<p>All tags accessible through IMDS will subsequently be \"cleaned\" and made available for crafting custom domain names. A Pascal Case naming convention is applied to all tags when stored within an internal map alongside their originally named counterpart, and both are accessible through templating.</p>   <ol> <li> <p>Access to EC2 instance tags can be granted directly through the AWS Console or by using the CLI as documented here \u21a9</p> </li> </ol>","title":"Cleaning Tag Names"},{"location":"configure/iam/","text":"<p>Limited access to Route53 and EC2 is required for <code>dns53</code> to work. Your IAM persona must have the following permissions granted:</p> <pre><code>{\n  \"Version\": \"2012-10-17\",\n  \"Statement\": [\n    {\n      \"Effect\": \"Allow\",\n      \"Action\": [\n        \"route53:AssociateVPCWithHostedZone\",\n        \"route53:ChangeResourceRecordSets\",\n        \"route53:DeleteHostedZone\",\n        \"route53:DisassociateVPCFromHostedZone\",\n        \"route53:GetHostedZone\"\n      ],\n      \"Resource\": \"arn:aws:route53:::hostedzone/*\"\n    },\n    {\n      \"Effect\": \"Allow\",\n      \"Action\": [\n        \"ec2:DescribeVpcs\",\n        \"route53:CreateHostedZone\",\n        \"route53:ListHostedZonesByName\",\n        \"route53:ListHostedZonesByVPC\"\n      ],\n      \"Resource\": \"*\"\n    },\n    {\n      \"Effect\": \"Allow\",\n      \"Action\": [\"ec2:ModifyInstanceMetadataOptions\"],\n      \"Resource\": \"arn:aws:ec2:&lt;REGION&gt;:&lt;ACCOUNT&gt;:instance/*\" // (1)!\n    }\n  ]\n}\n</code></pre> <ol> <li>Don't forget to replace the <code>&lt;REGION&gt;</code> and <code>&lt;ACCOUNT&gt;</code> placeholders with your specific AWS details, e.g. <code>arn:aws:ec2:eu-west-2:112233445566:instance/*</code>. You could also lock it down to a specific EC2 instance if you wanted </li> </ol>  <p>Aim for Least Privilege </p> <p>It would be best if you fine-tuned this policy further to restrict access and adopt the mantra of \"least privilege\". You accept this policy at your own risk</p>","title":"IAM Permissions"},{"location":"configure/list-tags/","text":"<p>To generate a cheat sheet for including EC2 instance tags within a custom domain using Go templating, run the following command:</p> <pre><code>dns tags\n</code></pre>","title":"List Available EC2 Instance Tags"},{"location":"install/binary/","text":"<p>You can use various package managers to install the <code>dns53</code> binary. Take your pick.</p>","title":"Installing the Binary"},{"location":"install/binary/#package-managers","text":"","title":"Package Managers"},{"location":"install/binary/#homebrew","text":"<p>To use Homebrew:</p> <pre><code>brew install purpleclay/tap/dns53\n</code></pre>","title":"Homebrew"},{"location":"install/binary/#scoop","text":"<p>To use Scoop:</p> <pre><code>scoop bucket add purpleclay https://github.com/purpleclay/scoop-bucket.git\nscoop install dns53\n</code></pre>","title":"Scoop"},{"location":"install/binary/#apt","text":"<p>To install using the apt package manager:</p> <pre><code>echo 'deb [trusted=yes] https://fury.purpleclay.dev/apt/ /' | sudo tee /etc/apt/sources.list.d/purpleclay.list\nsudo apt update\nsudo apt install -y dns53\n</code></pre> <p>You may need to install the <code>ca-certificates</code> package if you encounter [trust issues with regard to the Gemfury certificate:</p> <pre><code>sudo apt update &amp;&amp; sudo apt install -y ca-certificates\n</code></pre>","title":"Apt"},{"location":"install/binary/#yum","text":"<p>To install using the yum package manager:</p> <pre><code>echo '[purpleclay]\nname=purpleclay\nbaseurl=https://fury.purpleclay.dev/yum/\nenabled=1\ngpgcheck=0' | sudo tee /etc/yum.repos.d/purpleclay.repo\nsudo yum install -y dns53\n</code></pre>","title":"Yum"},{"location":"install/binary/#aur","text":"<p>To install from the aur using yay:</p> <pre><code>yay -S dns53-bin\n</code></pre>","title":"Aur"},{"location":"install/binary/#linux-packages","text":"<p>Download and manually install one of the <code>.deb</code>, <code>.rpm</code> or <code>.apk</code> packages from the Releases page.</p> AptYumApk   <pre><code>sudo apt install dns53_*.deb\n</code></pre>   <pre><code>sudo yum localinstall dns53_*.rpm\n</code></pre>   <pre><code>sudo apk add --no-cache --allow-untrusted dns53_*.apk\n</code></pre>","title":"Linux Packages"},{"location":"install/binary/#go-install","text":"<pre><code>go install github.com/purpleclay/dns53@latest\n</code></pre>","title":"Go Install"},{"location":"install/binary/#bash-script","text":"<p>To install the latest version using a bash script:</p> <pre><code>curl https://raw.githubusercontent.com/purpleclay/dns53/main/scripts/install | bash\n</code></pre> <p>Download a specific version using the <code>-v</code> flag. The script uses <code>sudo</code> by default but can be disabled through the <code>--no-sudo</code> flag.</p> <pre><code>curl https://raw.githubusercontent.com/purpleclay/dns53/main/scripts/install | bash -s -- -v v0.1.0 --no-sudo\n</code></pre>","title":"Bash Script"},{"location":"install/binary/#manual-download-of-binary","text":"<p>Head over to the Releases page on GitHub and download any release artefact. Unpack the <code>dns53</code> binary and add it to your <code>PATH</code>.</p>","title":"Manual Download of Binary"},{"location":"install/binary/#verifying-a-binary-with-cosign","text":"<p>All binaries can be verified using cosign.</p> <ol> <li>Download the checksum files that need to be verified:</li> </ol> <pre><code>curl -sL https://github.com/purpleclay/dns53/releases/download/v0.8.0/checksums.txt -O\ncurl -sL https://github.com/purpleclay/dns53/releases/download/v0.8.0/checksums.txt.sig -O\ncurl -sL https://github.com/purpleclay/dns53/releases/download/v0.8.0/checksums.txt.pem -O\n</code></pre> <ol> <li>Verify the signature of the checksum file:</li> </ol> <pre><code>cosign verify-blob --cert checksums.txt.pem --signature checksums.txt.sig checksums.txt\n</code></pre> <ol> <li>Download any release artefact and verify its SHA256 signature matches the entry within the checksum file:</li> </ol> <pre><code>sha256sum --ignore-missing -c checksums.txt\n</code></pre>","title":"Verifying a Binary with Cosign"},{"location":"install/source/","text":"<p>Download both Go 1.19+ and go-task. Then clone the code from GitHub:</p> <pre><code>git clone https://github.com/purpleclay/dns53.git\ncd dns53\n</code></pre> <p>Build:</p> <pre><code>task\n</code></pre> <p>And check that everything works:</p> <pre><code>./dns53 version\n</code></pre>","title":"Compiling from Source"},{"location":"reference/templating/","text":"<p>Full support for Go templates through a series of predefined named fields allows `dns53`` to support a dynamic configuration where needed.</p>  <p>Table Key</p> <p>This is a living table and will change as new features are released.</p> <ul> <li>: the metadata was formatted to ensure it is URL compliant</li> <li>: the metadata was retrieved from EC2 instance tags; this feature must be enabled</li> </ul>","title":"Go Templates"},{"location":"reference/templating/#named-fields","text":"<p>The following named fields directly access metadata about your EC2 from the Instance Metadata Service (IMDS).</p>    Named Field Description Example     <code>{{.IPv4}}</code> the private IPv4 address of the EC2 instance <code>10-0-1-182</code>    <code>{{.Region}}</code> the region of the EC2 instance <code>eu-west-2</code>   <code>{{.VPC}}</code> the VPC ID of where the EC2 instance was launched <code>vpc-016d173db537793d1</code>   <code>{{.AZ}}</code> the availability zone (AZ) of the EC2 instance <code>eu-west-2a</code>   <code>{{.InstanceID}}</code> the unique ID of the EC2 instance <code>i-03e092f544905abb2</code>   <code>{{.Name}}</code>  a name assigned to the EC2 instance <code>dev-ec2</code>","title":"Named Fields"},{"location":"reference/templating/#dynamic-tags","text":"<p>As the IMDS service exposes all EC2 instance tags (once enabled), you can access them in much the same way as other named fields. Internally <code>dns53</code> stores all tags within a <code>Tags</code> map and provides access to them in two ways.</p> <ol> <li>Directly through property chaining1, <code>{{.Tags.Key}}</code></li> <li>Or by using the inbuilt Go templating <code>index</code> function, <code>{{index .Tags \"Key\"}}</code></li> </ol>    Named Field Description Examples     <code>{{.Tags.Ec2Role}}</code>  the role assigned to this EC2 instance <code>development</code>   <code>{{index .Tags \"ec2:role\"}}</code>  the role assigned to this EC2 instance <code>development</code>      <ol> <li> <p>Amazon's tag naming and usage guidelines permit characters not supported by Go templating for property chaining, namely <code>[+ - = . , _ : @]</code>. A best efforts approach was adopted to clean the name of the tag; for further details, please read the following documentation.\u00a0\u21a9</p> </li> </ol>","title":"Dynamic Tags"},{"location":"reference/cli/dns53-imds/","text":"<p>Toggle EC2 IMDS features</p>","title":"Command Line"},{"location":"reference/cli/dns53-imds/#usage","text":"<pre><code>dns53 imds [flags]\n</code></pre>","title":"Usage"},{"location":"reference/cli/dns53-imds/#flags","text":"<pre><code>-h, --help                            help for imds\n    --instance-metadata-tags string   toggle the inclusion of EC2 instance tags within IMDS (on|off)\n</code></pre>","title":"Flags"},{"location":"reference/cli/dns53-imds/#global-flags","text":"<pre><code>--profile string   the AWS named profile to use when loading credentials\n--region string    the AWS region to use when querying AWS\n</code></pre>","title":"Global Flags"},{"location":"reference/cli/dns53-tags/","text":"<p>Lists all available EC2 instance tags and how to use them with Go templating</p>","title":"Command Line"},{"location":"reference/cli/dns53-tags/#usage","text":"<pre><code>dns53 tags [flags]\n</code></pre>","title":"Usage"},{"location":"reference/cli/dns53-tags/#flags","text":"<pre><code>-h, --help   help for tags\n</code></pre>","title":"Flags"},{"location":"reference/cli/dns53-tags/#global-flags","text":"<pre><code>--profile string   the AWS named profile to use when loading credentials\n--region string    the AWS region to use when querying AWS\n</code></pre>","title":"Global Flags"},{"location":"reference/cli/dns53/","text":"<p>Dynamic DNS within Amazon Route 53. Expose your EC2 quickly, easily, and privately within a Route 53 Private Hosted Zone (PHZ).</p> <p>Your EC2 will be exposed through a dynamically generated resource record that will automatically be deleted when dns53 exits. Let dns53 name your resource record for you, or customise it to your needs.</p>","title":"Command Line"},{"location":"reference/cli/dns53/#usage","text":"<pre><code>dns53 [flags]\ndns53 [command]\n</code></pre>","title":"Usage"},{"location":"reference/cli/dns53/#flags","text":"<pre><code>    --auto-attach          automatically create and attach a record set to a default private hosted zone\n    --domain-name string   assign a custom domain name when generating a record set\n-h, --help                 help for dns53\n    --phz-id string        an ID of a Route53 private hosted zone to use when generating a record set\n    --profile string       the AWS named profile to use when loading credentials\n    --region string        the AWS region to use when querying AWS\n</code></pre>","title":"Flags"},{"location":"reference/cli/dns53/#commands","text":"<pre><code>completion  Generate completion script for your target shell\nhelp        Help about any command\nimds        Toggle EC2 IMDS features\nversion     Prints the build time version information\n</code></pre>","title":"Commands"}]}