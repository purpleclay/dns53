# https://taskfile.dev

version: "3"

vars:
  BINDIR: bin
  BINNAME: dns53
  COVERDIR: cover
  GIT_COMMIT:
    sh: git rev-parse HEAD
  GIT_SHA:
    sh: git rev-parse --short HEAD
  GIT_BRANCH:
    sh: git branch --show-current
  LDFLAGS: >
    -X github.com/purpleclay/dns53/cmd.version=dev-{{.GIT_SHA}}
    -X github.com/purpleclay/dns53/cmd.gitCommit={{.GIT_COMMIT}}
    -X github.com/purpleclay/dns53/cmd.gitBranch={{.GIT_BRANCH}}
    -X github.com/purpleclay/dns53/cmd.buildDate={{now | date "2006-01-02T15:04:05Z07:00"}}

tasks:
  default:
    desc: Runs all of the default tasks
    cmds:
      - task: clean
      - task: lint
      - task: test
      - task: integration-test
      - task: build

  build:
    desc: Build the dns53 binary
    cmds:
      - go build -ldflags '-s -w {{.LDFLAGS}}' .

  cover-prep:
    desc: Prerequisites for code coverage reporting
    cmds:
      - mkdir -p {{.COVERDIR}}
    status:
      - test -d {{.COVERDIR}}

  test:
    desc: Run the tests
    deps: [cover-prep]
    cmds:
      - go test -tags=!integration -race -vet=off -p 1 -covermode=atomic -coverprofile={{.COVERDIR}}/unittest.out ./...

  integration-test:
    desc: Run the integration tests
    deps: [cover-prep]
    cmds:
      - go test -tags=integration -race -vet=off -p 1 -covermode=atomic -coverprofile={{.COVERDIR}}/integrationtest.out ./...

  lint:
    desc: Lint the code using golangci
    cmds:
      - golangci-lint run --timeout 5m0s

  fmt:
    desc: gofumpt all code
    cmds:
      - gofumpt -w -l .

  clean:
    desc: Delete all artefacts from recent build
    cmds:
      - rm ./{{.BINNAME}}
      - rm -rf {{.COVERDIR}}
