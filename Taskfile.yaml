# Copyright (c) 2023 Purple Clay
#
# Permission is hereby granted, free of charge, to any person obtaining a copy
# of this software and associated documentation files (the "Software"), to deal
# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
# in the Software without restriction, including without limitation the rights
# copies of the Software, and to permit persons to whom the Software is
# furnished to do so, subject to the following conditions:
#
# The above copyright notice and this permission notice shall be included in all
# copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
# SOFTWARE.

version: "3"

vars:
  GIT_COMMIT:
    sh: git rev-parse HEAD
  GIT_SHA:
    sh: git rev-parse --short HEAD
  GIT_BRANCH:
    sh: git branch --show-current
  LDFLAGS: >
    -X github.com/purpleclay/dns53/cmd.version=dev-{{.GIT_SHA}}
    -X github.com/purpleclay/dns53/cmd.gitCommit={{.GIT_COMMIT}}
    -X github.com/purpleclay/dns53/cmd.gitBranch={{.GIT_BRANCH}}
    -X github.com/purpleclay/dns53/cmd.buildDate={{now | date "2006-01-02T15:04:05Z07:00"}}

tasks:
  default:
    desc: Runs all of the default tasks
    cmds:
      - task: ci

  ci:
    desc: Run all CI tasks
    cmds:
      - task: deps
      - task: unit-test
      - task: integration-test
      - task: lint
      - task: build

  deps:
    desc: Install all dependencies
    cmds:
      - go mod tidy

  unit-test:
    desc: Run the unit tests
    vars:
      TEST_FORMAT: '{{default "" .TEST_FORMAT}}'
      COVER_PROFILE: '{{default "coverage.out" .COVER_PROFILE}}'
      TEST_OPTIONS: '{{default "-short -race -vet=off -shuffle=on" .TEST_OPTIONS}}'
    cmds:
      - go test {{.TEST_OPTIONS}} -covermode=atomic -coverprofile={{.COVER_PROFILE}} {{.TEST_FORMAT}} ./...

  integration-test:
    desc: Run the integration tests
    vars:
      TEST_FORMAT: '{{default "" .TEST_FORMAT}}'
      COVER_PROFILE: '{{default "integrationtest.out" .COVER_PROFILE}}'
      TEST_OPTIONS: '{{default "-short -race -vet=off -shuffle=on" .TEST_OPTIONS}}'
    cmds:
      - go test -run=Integration {{.TEST_OPTIONS}} -covermode=atomic -coverprofile={{.COVER_PROFILE}} {{.TEST_FORMAT}} ./...

  lint:
    desc: Lint the code using golangci-lint
    vars:
      REPORT_FORMAT: '{{default "colored-line-number" .REPORT_FORMAT}}'
    cmds:
      - golangci-lint run --timeout 5m0s --out-format {{.REPORT_FORMAT}}

  build:
      desc: Build the binary
      cmds:
        - go build -ldflags '-s -w {{.LDFLAGS}}' .

  format:
    desc: Format the code using gofumpt
    cmds:
      - gofumpt -w -l .
